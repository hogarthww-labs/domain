{
  "$schema": "http://json-schema.org/schema",
  "$id": "SchematicsAngularComponent",
  "title": "Angular Component Options Schema",
  "cli": "nx",
  "type": "object",
  "description": "Creates a new generic component definition in the given or default project",
  "properties": {
    "application": {
      "type": "string",
      "description": "Application that the new component will belong to",
      "x-prompt": "What application will the component be under?"
    },
    "domain": {
      "type": "string",
      "description": "Name of the domain to create the component in",
      "x-prompt": "What is the domain you are creating the comopnent in?"
    },
    "name": {
      "type": "string",
      "description": "The name of the component",
      "x-prompt": "What name would you like to use for the component?"
    },
    "prefix": {
      "type": "string",
      "description": "The prefix to apply to generated selectors.",
      "x-prompt": "What is the prefix to apply to generated selectors?"
    },
    "displayBlock": {
      "description": "Specifies if the style will contain `:host { display: block; }`",
      "type": "boolean",
      "default": false
    },
    "viewEncapsulation": {
      "description": "The view encapsulation strategy to use in the new component.",
      "enum": ["Emulated", "None", "ShadowDom"],
      "default": "Emulated",
      "type": "string",
      "x-prompt": {
        "message": "Which type of view encapsulation would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "Emulated",
            "label": "Emulate Native scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via styles or styleUrls, and adding the new Host Element attribute to all selectors. This is the default option"
          },
          {
            "value": "None",
            "label": "Don't provide any template or style encapsulation"
          },
          {
            "value": "ShadowDom",
            "label": "Use Shadow DOM to encapsulate styles"
          }
        ]
      }
    },
    "style": {
      "description": "The file extension to be used for style files.",
      "type": "string",
      "default": "scss",
      "enum": ["css", "scss", "less"],
      "x-prompt": {
        "message": "Which stylesheet format would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "css",
            "label": "CSS"
          },
          {
            "value": "scss",
            "label": "SASS(.scss) [http://sass-lang.com]"
          },
          {
            "value": "less",
            "label": "LESS        [http://lesscss.org]"
          }
        ]
      }
    },
    "testType": {
      "description": "The type of test file to create",
      "type": "string",
      "enum": ["noTest", "enzyme", "testRenderer"],
      "default": "enzyme",
      "x-prompt": {
        "message": "What type of test file do you want to create?",
        "type": "list",
        "items": [
          {
            "value": "noTest",
            "label": "Do not create \"spec.ts\" test files for the new component"
          },
          {
            "value": "enzyme",
            "label": "create a \"spec.ts\" test file for the new component that uses enzyme"
          },
          {
            "value": "testRenderer",
            "label": "create a \"spec.ts\" test file for the new component that does not use test-renderer"
          }
        ]
      }
    },
    "isExported": {
      "type": "boolean",
      "default": false,
      "description": "The declaring NgModule exports this component"
    }
  }
}
